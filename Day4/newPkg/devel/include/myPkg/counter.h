// Generated by gencpp from file myPkg/counter.msg
// DO NOT EDIT!


#ifndef MYPKG_MESSAGE_COUNTER_H
#define MYPKG_MESSAGE_COUNTER_H

#include <ros/service_traits.h>


#include <myPkg/counterRequest.h>
#include <myPkg/counterResponse.h>


namespace myPkg
{

struct counter
{

typedef counterRequest Request;
typedef counterResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct counter
} // namespace myPkg


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::myPkg::counter > {
  static const char* value()
  {
    return "fcbde222c0a68b4a1d0b96c95b82d17a";
  }

  static const char* value(const ::myPkg::counter&) { return value(); }
};

template<>
struct DataType< ::myPkg::counter > {
  static const char* value()
  {
    return "myPkg/counter";
  }

  static const char* value(const ::myPkg::counter&) { return value(); }
};


// service_traits::MD5Sum< ::myPkg::counterRequest> should match
// service_traits::MD5Sum< ::myPkg::counter >
template<>
struct MD5Sum< ::myPkg::counterRequest>
{
  static const char* value()
  {
    return MD5Sum< ::myPkg::counter >::value();
  }
  static const char* value(const ::myPkg::counterRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::myPkg::counterRequest> should match
// service_traits::DataType< ::myPkg::counter >
template<>
struct DataType< ::myPkg::counterRequest>
{
  static const char* value()
  {
    return DataType< ::myPkg::counter >::value();
  }
  static const char* value(const ::myPkg::counterRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::myPkg::counterResponse> should match
// service_traits::MD5Sum< ::myPkg::counter >
template<>
struct MD5Sum< ::myPkg::counterResponse>
{
  static const char* value()
  {
    return MD5Sum< ::myPkg::counter >::value();
  }
  static const char* value(const ::myPkg::counterResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::myPkg::counterResponse> should match
// service_traits::DataType< ::myPkg::counter >
template<>
struct DataType< ::myPkg::counterResponse>
{
  static const char* value()
  {
    return DataType< ::myPkg::counter >::value();
  }
  static const char* value(const ::myPkg::counterResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // MYPKG_MESSAGE_COUNTER_H
